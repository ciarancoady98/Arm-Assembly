


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             BubbleSort, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F407C        LDR              R4, =testarr ;
    7 00000004 E3A0500A        LDR              R5, =N      ;
    8 00000008 E1A00004        MOV              R0, R4      ;
    9 0000000C E1A01005        MOV              R1, R5      ;
   10 00000010         
   11 00000010 EB000000        BL               sort        ; Branch to sort su
                                                            broutine
   12 00000014 EAFFFFFE 
                       stop    B                stop
   13 00000018         ;sort subrotuine
   14 00000018         ;determines which integers in an array will be swapped
   15 00000018         ;parameters:  R0 start address of test array
   16 00000018         ;    R1 = N
   17 00000018         ;
   18 00000018         sort
   19 00000018 E92D40F0        STMFD            sp!, {R4-R7,lr} ;R4-R7 used for
                                                             local variables
   20 0000001C E3A04001        LDR              R4, =1      ;swapped = true
   21 00000020         wh1                                  ;
   22 00000020 E3540001        CMP              R4, #1      ;while(swapped == t
                                                            rue){
   23 00000024 1A00000F        BNE              endsort     ;
   24 00000028 E3A04000        LDR              R4, =0      ;swapped = false
   25 0000002C E3A05001        LDR              R5, =1      ;i =1
   26 00000030         for                                  ;
   27 00000030 E1550001        CMP              R5, R1      ;for(i=1;i<N;i++){
   28 00000034 AA00000A        BGE              endfor
   29 00000038 E2456001        SUB              R6, R5, #1  ;i-1 = i-1
   30 0000003C E1A02006        MOV              R2, R6      ;move i-1 into a pa
                                                            rameter variable
   31 00000040 E1A03005        MOV              R3, R5      ;move i into a para
                                                            meter variable
   32 00000044 E7906106        LDR              R6, [R0, R6, LSL #2] 
                                                            ;array[i-1]
   33 00000048 E7907105        LDR              R7, [R0, R5, LSL #2] ;array[i]
   34 0000004C         if1
   35 0000004C E1560007        CMP              R6, R7      ;if(array[i-1] > ar
                                                            ray[i]){
   36 00000050 9A000001        BLS              endif1      ;
   37 00000054 EB000004        BL               swap        ;Branch to swap sub
                                                            routine
   38 00000058 E3A04001        MOV              R4, #1      ;swapped = true
   39 0000005C         endif1                               ;}
   40 0000005C E2855001        ADD              R5, R5, #1  ;
   41 00000060 EAFFFFF2        B                for         ;}
   42 00000064         endfor
   43 00000064 EAFFFFED        B                wh1         ;}
   44 00000068         endsort
   45 00000068 E8BD80F0        LDMFD            sp!, {R4-R7,PC} 
                                                            ;restore registers
   46 0000006C         
   47 0000006C         ;swap subroutine
   48 0000006C         ;swaps two elements of a 1 dimensional array
   49 0000006C         ;parameters:



ARM Macro Assembler    Page 2 


   50 0000006C         ;R0 = array address
   51 0000006C         ;R2 = i-1
   52 0000006C         ;R3 = i
   53 0000006C         
   54 0000006C         swap
   55 0000006C E92D4030        STMFD            sp!,{R4-R5,lr} ;store registers
                                                             used for local var
                                                            iables
   56 00000070 E7904102        LDR              R4,[R0, R2, LSL #2] ;array[i-1]
                                                             = Memory.word[test
                                                            Array +((i-1)*4)]
   57 00000074 E7905103        LDR              R5,[R0, R3, LSL #2] ;array[i] =
                                                            = Memory.word[testA
                                                            rray +(i*4)]
   58 00000078 E7805102        STR              R5,[R0, R2, LSL #2] ;Memory.wor
                                                            d[testArray + ((i-1
                                                            )*4)] = array[i]
   59 0000007C E7804103        STR              R4,[R0, R3, LSL #2] ;Momory.wor
                                                            d[testtArray + (i*4
                                                            )] =array[i-1]
   60 00000080 E8BD8030        LDMFD            sp!, {R4-R5,PC} 
                                                            ;restore registers
   61 00000084         
   62 00000084         
   63 00000084 00000000 
              00000000         AREA             TestData, DATA, READWRITE
   64 00000000 0000000A 
                       N       EQU              10
   65 00000000 00000003 
              00000009 
              00000002 
              00000001 
              00000008 
              00000000 
              00000007 
              00000004 
              00000009 
              00000006 testarr DCD              3,9,2,1,8,0,7,4,9,6
   66 00000028                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\b
ubblesort.d -o.\bubblesort.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\I
nclude -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__
MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="NO_CLOCK
_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1
" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\bubblesort.
lst BubbleSort.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BubbleSort 00000000

Symbol: BubbleSort
   Definitions
      At line 1 in file BubbleSort.s
   Uses
      None
Comment: BubbleSort unused
endfor 00000064

Symbol: endfor
   Definitions
      At line 42 in file BubbleSort.s
   Uses
      At line 28 in file BubbleSort.s
Comment: endfor used once
endif1 0000005C

Symbol: endif1
   Definitions
      At line 39 in file BubbleSort.s
   Uses
      At line 36 in file BubbleSort.s
Comment: endif1 used once
endsort 00000068

Symbol: endsort
   Definitions
      At line 44 in file BubbleSort.s
   Uses
      At line 23 in file BubbleSort.s
Comment: endsort used once
for 00000030

Symbol: for
   Definitions
      At line 26 in file BubbleSort.s
   Uses
      At line 41 in file BubbleSort.s
Comment: for used once
if1 0000004C

Symbol: if1
   Definitions
      At line 34 in file BubbleSort.s
   Uses
      None
Comment: if1 unused
sort 00000018

Symbol: sort
   Definitions
      At line 18 in file BubbleSort.s
   Uses
      At line 11 in file BubbleSort.s
Comment: sort used once
start 00000000

Symbol: start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 5 in file BubbleSort.s
   Uses
      At line 3 in file BubbleSort.s
Comment: start used once
stop 00000014

Symbol: stop
   Definitions
      At line 12 in file BubbleSort.s
   Uses
      At line 12 in file BubbleSort.s
Comment: stop used once
swap 0000006C

Symbol: swap
   Definitions
      At line 54 in file BubbleSort.s
   Uses
      At line 37 in file BubbleSort.s
Comment: swap used once
wh1 00000020

Symbol: wh1
   Definitions
      At line 21 in file BubbleSort.s
   Uses
      At line 43 in file BubbleSort.s
Comment: wh1 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestData 00000000

Symbol: TestData
   Definitions
      At line 63 in file BubbleSort.s
   Uses
      None
Comment: TestData unused
testarr 00000000

Symbol: testarr
   Definitions
      At line 65 in file BubbleSort.s
   Uses
      At line 6 in file BubbleSort.s
Comment: testarr used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 0000000A

Symbol: N
   Definitions
      At line 64 in file BubbleSort.s
   Uses
      At line 7 in file BubbleSort.s
Comment: N used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file BubbleSort.s
   Uses
      None
Comment: main unused
1 symbol
355 symbols in table
